# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: kube-state-metrics
#   namespace: monitoring
#   labels:
#     app: kube-state-metrics
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: kube-state-metrics
#   template:
#     metadata:
#       labels:
#         app: kube-state-metrics
#     spec:
#       serviceAccountName: kube-state-metrics
#       containers:
#       - name: kube-state-metrics
#         # image: quay.io/coreos/kube-state-metrics:v2.9.2
#         image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.10.0
#         ports:
#         - containerPort: 8081
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: kube-state-metrics
#   namespace: monitoring
#   labels:
#     app: kube-state-metrics
# spec:
#   ports:
#   - name: http-metrics
#     port: 8081
#     targetPort: 8081
#   selector:
#     app: kube-state-metrics
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: kube-state-metrics
#   namespace: monitoring
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: kube-state-metrics
# rules:
# - apiGroups: [""]
#   resources: ["nodes", "pods", "services", "resourcequotas", "replicationcontrollers", "limitranges", "persistentvolumeclaims", "persistentvolumes", "namespaces", "endpoints"]
#   verbs: ["list", "watch"]
# - apiGroups: ["apps"]
#   resources: ["statefulsets", "daemonsets", "deployments", "replicasets"]
#   verbs: ["list", "watch"]
# - apiGroups: ["batch"]
#   resources: ["jobs", "cronjobs"]
#   verbs: ["list", "watch"]
# - apiGroups: ["autoscaling"]
#   resources: ["horizontalpodautoscalers"]
#   verbs: ["list", "watch"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: kube-state-metrics
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: kube-state-metrics
# subjects:
# - kind: ServiceAccount
#   name: kube-state-metrics
#   namespace: monitoring


# 2nd

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: monitoring
  labels:
    app: kube-state-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-state-metrics
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      serviceAccountName: kube-state-metrics
      containers:
      - name: kube-state-metrics
        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
        args:
        - "--port=8081"
        - "--telemetry-port=8082"
        ports:
        - containerPort: 8081
          name: http-metrics
        - containerPort: 8082
          name: telemetry
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics
  namespace: monitoring
  labels:
    app: kube-state-metrics
spec:
  ports:
  - name: http-metrics
    port: 8081
    targetPort: 8081
  - name: telemetry
    port: 8082
    targetPort: 8082
  selector:
    app: kube-state-metrics
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-state-metrics
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs: ["list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - daemonsets
  - deployments
  - replicasets
  verbs: ["list", "watch"]
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs: ["list", "watch"]
- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]
- apiGroups: ["policy"]
  resources:
  - poddisruptionbudgets
  verbs: ["list", "watch"]
- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources:
  - storageclasses
  - volumeattachments
  verbs: ["list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  - ingressclasses
  - ingresses
  verbs: ["list", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs: ["list", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs: ["list", "watch"]
# New additions below
- apiGroups: ["admissionregistration.k8s.io"]
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["list", "watch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources:
  - customresourcedefinitions
  verbs: ["list", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources:
  - endpointslices
  verbs: ["list", "watch"]
- apiGroups: ["flowcontrol.apiserver.k8s.io"]
  resources:
  - prioritylevelconfigurations
  - flowschemas
  verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
- kind: ServiceAccount 
  name: kube-state-metrics
  namespace: monitoring