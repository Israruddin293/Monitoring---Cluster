# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: prometheus-server-conf
#   namespace: monitoring
#   labels:
#     app: prometheus
# data:
#   prometheus.yml: |
#     global:
#       scrape_interval: 15s
#       evaluation_interval: 15s
    
#     scrape_configs:
#       - job_name: 'kubernetes-apiservers'
#         kubernetes_sd_configs:
#         - role: endpoints
#         scheme: https
#         tls_config:
#           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#         relabel_configs:
#         - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
#           action: keep
#           regex: default;kubernetes;https

#       - job_name: 'kubernetes-nodes'
#         kubernetes_sd_configs:
#         - role: node
#         scheme: https
#         tls_config:
#           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#         relabel_configs:
#         - action: labelmap
#           regex: __meta_kubernetes_node_label_(.+)
#         - target_label: __address__
#           replacement: kubernetes.default.svc:443
#         - source_labels: [__meta_kubernetes_node_name]
#           regex: (.+)
#           target_label: __metrics_path__
#           replacement: /api/v1/nodes/${1}/proxy/metrics

#       - job_name: 'kubernetes-pods'
#         kubernetes_sd_configs:
#         - role: pod
#         relabel_configs:
#         - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
#           action: keep
#           regex: true
#         - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
#           action: replace
#           target_label: __metrics_path__
#           regex: (.+)
#         - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
#           action: replace
#           regex: ([^:]+)(?::\d+)?;(\d+)
#           replacement: $1:$2
#           target_label: __address__
#         - action: labelmap
#           regex: __meta_kubernetes_pod_label_(.+)
#         - source_labels: [__meta_kubernetes_namespace]
#           action: replace
#           target_label: kubernetes_namespace
#         - source_labels: [__meta_kubernetes_pod_name]
#           action: replace
#           target_label: kubernetes_pod_name

#       - job_name: 'kube-state-metrics'
#         kubernetes_sd_configs:
#         - role: endpoints
#         relabel_configs:
#         - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
#           action: keep
#           regex: kube-state-metrics
#         - source_labels: [__meta_kubernetes_endpoint_port_name]
#           action: keep
#           regex: http-metrics

#       - job_name: 'node-exporter'
#         kubernetes_sd_configs:
#         - role: endpoints
#         relabel_configs:
#         - source_labels: [__meta_kubernetes_service_label_app]
#           action: keep
#           regex: node-exporter
#         - source_labels: [__meta_kubernetes_endpoint_port_name]
#           action: keep
#           regex: metrics
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  namespace: monitoring
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
      # Simplified configuration for Minikube
      - job_name: 'minikube-node'
        static_configs:
        - targets: ['node-exporter.monitoring.svc:9100']

      - job_name: 'kube-state-metrics'
        static_configs:
        - targets: ['kube-state-metrics.monitoring.svc:8081']

      - job_name: 'prometheus'
        static_configs:
        - targets: ['localhost:9090']

      # Optional: Add minikube components
      - job_name: 'minikube-components'
        static_configs:
        - targets: ['minikube:10250']
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.47.0
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus/"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus/
        - name: prometheus-storage-volume
          mountPath: /prometheus/
      volumes:
      - name: prometheus-config-volume
        configMap:
          name: prometheus-server-conf
      - name: prometheus-storage-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'
spec:
  selector:
    app: prometheus
  type: NodePort
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30000